{"name": "Verify Fm_chapter name on sort order popup", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_cases.test_view_project_page.Test_View_Project_Page object at 0x000001885BF25790>\n\n    @allure.feature(\"Sort Order\")\n    @allure.title(\"Verify Fm_chapter name on sort order popup\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_verify_Fm_chapter_names(self):\n>       project_name = self.dashboardpage.check_project_display(\n            \"2021 International Mechanical Code\"\n        )\n\ntest_cases\\test_view_project_page.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_objects\\dashboard_page.py:269: in check_project_display\n    for i in self.get_row_data(\"Project Name\"):\npage_objects\\dashboard_page.py:150: in get_row_data\n    return self.baseclass.wait_until_elements(\nuitility\\baseclass.py:56: in wait_until_elements\n    return self.wait.until(EC.presence_of_all_elements_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9a988314d4daa04d54923e3fb53893a7\")>, method = <function presence_of_all_elements_located.<locals>._predicate at 0x000001885BFB71A0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "steps": [{"name": "Check Project is display", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"D:\\python program\\ICC-Shop\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\python program\\ICC-Shop\\page_objects\\dashboard_page.py\", line 269, in check_project_display\n    for i in self.get_row_data(\"Project Name\"):\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\python program\\ICC-Shop\\page_objects\\dashboard_page.py\", line 150, in get_row_data\n    return self.baseclass.wait_until_elements(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\python program\\ICC-Shop\\uitility\\baseclass.py\", line 56, in wait_until_elements\n    return self.wait.until(EC.presence_of_all_elements_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\python program\\ICC-Shop\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "project_name", "value": "'2021 International Mechanical Code'"}], "start": 1722257157056, "stop": 1722257187802}], "attachments": [{"name": "D:\\python program\\ICC-Shop\\Screenshot/test_verify_Fm_chapter_names.png", "source": "6ae11c12-2c9e-4a2c-91be-6ea7a3cbc551-attachment.png", "type": "image/png"}], "start": 1722257157056, "stop": 1722257187802, "uuid": "b8ad00a2-0eab-4efb-826c-010b25418aaf", "historyId": "aa2dee5b153dff2e0829c1bac42c716f", "testCaseId": "aa2dee5b153dff2e0829c1bac42c716f", "fullName": "test_cases.test_view_project_page.Test_View_Project_Page#test_verify_Fm_chapter_names", "labels": [{"name": "tag", "value": "Project View Page"}, {"name": "feature", "value": "Sort Order"}, {"name": "epic", "value": "Project Overview"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "run(order=3)"}, {"name": "tag", "value": "fourth"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_view_project_page"}, {"name": "subSuite", "value": "Test_View_Project_Page"}, {"name": "host", "value": "IB-Pune-LAP-386"}, {"name": "thread", "value": "12824-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_view_project_page"}]}